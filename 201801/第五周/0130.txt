ES6 允许按照一定模式，从数组和对象中提取值，
对变量进行赋值，这被称为解构（Destructuring）。
这样的写法叫模式匹配，只要等号两边的模式相同，
左边的变量就会被赋予相应的值
如果结构不成功，变量的值就等于undefined.
ES6使用严格相等运算符===  判断一个位置是否有值
所以只有当一个数组成员严格等于undefined,默认值才会生效
对象的解构赋值:
对象的属性没有次序，变量必须与属性同名，才能取到正确的值。

字符串也可以解构赋值。这是因为此时，字符串被转换成
了一个类似数组的对象
const[a,b,c]="cxh"//a="c",b="x",c="h";
在ES6中，只要有可能导致结构的歧义就不得用圆括号;
let x=1;let y=2;[x,y]=[y,x]交换值;

includes():返回布尔值，表示是否找到了参数字符串
startsWith():返回布尔值，表示参数字符串是否在原字符串的头部
endsWith():返回布尔值，表示参数字符串是否在原字符串的尾部
这三个方法都支持第二个参数，表示开始搜索的位置
